// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_read_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet.Internal
{
	sealed partial class CefReadHandlerGlue: CefReadHandler, ICefReadHandlerPrivate
	{
		private WebViewGlue _implementation;

		public CefReadHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefReadHandlerPrivate.AvoidRead()
		{
			return _implementation.AvoidRead();
		}

		public override long Read(IntPtr ptr, long size, long n)
		{
			return _implementation.Read(ptr, size, n);
		}

		bool ICefReadHandlerPrivate.AvoidSeek()
		{
			return _implementation.AvoidSeek();
		}

		public override int Seek(long offset, int whence)
		{
			return _implementation.Seek(offset, whence);
		}

		public override long Tell()
		{
			return _implementation.Tell();
		}

		public override int Eof()
		{
			return _implementation.Eof();
		}

		public override bool MayBlock()
		{
			return _implementation.MayBlock();
		}

	}
}
