// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_request_context_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet.Internal
{
	sealed partial class CefRequestContextHandlerGlue: CefRequestContextHandler, ICefRequestContextHandlerPrivate
	{
		private WebViewGlue _implementation;

		public CefRequestContextHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefRequestContextHandlerPrivate.AvoidOnRequestContextInitialized()
		{
			return _implementation.AvoidOnRequestContextInitialized();
		}

		public override void OnRequestContextInitialized(CefRequestContext requestContext)
		{
			_implementation.OnRequestContextInitialized(requestContext);
		}

		bool ICefRequestContextHandlerPrivate.AvoidOnBeforePluginLoad()
		{
			return _implementation.AvoidOnBeforePluginLoad();
		}

		public override bool OnBeforePluginLoad(string mimeType, string pluginUrl, bool isMainFrame, string topOriginUrl, CefWebPluginInfo pluginInfo, ref CefPluginPolicy pluginPolicy)
		{
			return _implementation.OnBeforePluginLoad(mimeType, pluginUrl, isMainFrame, topOriginUrl, pluginInfo, ref pluginPolicy);
		}

		bool ICefRequestContextHandlerPrivate.AvoidGetResourceRequestHandler()
		{
			return _implementation.AvoidGetResourceRequestHandler();
		}

		public override CefResourceRequestHandler GetResourceRequestHandler(CefBrowser browser, CefFrame frame, CefRequest request, bool isNavigation, bool isDownload, string requestInitiator, ref int disableDefaultHandling)
		{
			return _implementation.GetResourceRequestHandler(browser, frame, request, isNavigation, isDownload, requestInitiator, ref disableDefaultHandling);
		}

	}
}
